# Looks up a symbol in the symbol's scope (and thus, probably, the parent
# scope). In other words, this will fetch the value of the symbol from the scope
# where the symbol was created, not from the scope where `unsanitary_get` is
# called.
bind symbol.unsanitary_get (
    this{.get|.}{.get|.}
);

sym{:=| {do|
    x{:=|a};
    x
} {.eval|.}};
{do|
    x{:=|b};
    sym{.get|.}{.get|.}{!expect|b};
    sym{.get|.}{.unsanitary_get|.}{!expect|a}
} {.eval|.};

# Looks up a symbol in the caller's scope.
bind getter.sanitary_get (
    that{.get|.}{.eval|.}{.get|.}
);

sym{:=| {do|
    x{:=|a};
    x
} {.eval|.}};
{do|
    x{:=|b};
    sym{.get|.}{.get|.}{!expect|b};
    {getter|.}{.sanitary_get|sym{.get|.}}{!expect|b}
} {.eval|.};

.
