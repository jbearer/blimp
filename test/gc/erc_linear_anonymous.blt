#: --skip-racket -fno-gc-tracing

# This object creates a cycle involving parent pointers, where the outer block
# has a reference to `y`, whose parent is the inner block, whose parent is the
# outer block, like so:
#
#                                  ---------
#                                  |       |
#                             .<---| outer |
#                             |    |       |
#                             |    ----^----
#                             |        |
#                             |        | parent
#                             |        |
#                             |    ---------
#                             |    |       |
#                       scope |    | inner |
#                             |    |       |
#                             |    ----^----
#                             |        |
#                             |        | parent
#                             |        |
#                             |    ---------
#                             V    |       |
#                             .---->   y   |
#                                  |       |
#                                  ---------
#
#
{
    x{^ y}
}[];

:gc_expect_clean;

.
